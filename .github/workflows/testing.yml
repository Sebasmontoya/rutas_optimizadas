name: Code Testing Flow
concurrency: ${{ github.event.repository.name }}-test
on:
  push:
    branches:
      - 'testing'
env:
    SERVICE_NAME: ${{ github.event.repository.name }}
    PROJECT_CLUSTER_ID: ${{ secrets.PROJECT_CLUSTER_ID_TEST }}
    PROJECT_ID: ${{ secrets.PROJECT_ID_TEST }}
    CLUSTER_NAME: cm-cluster
    CLUSTER_LOCATION: us-central1
    ENV_FILE: env/test.env
    ENV: test
    HOST: apiv2-test.coordinadora.com
    IS_PUBLIC: false
    DOMAIN: consolidacion

jobs:
    build_and_deploy:
      runs-on: ubuntu-latest
      name: Build and deploy
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Cache node modules
          uses: actions/cache@v2
          with:
              path: '**/node_modules'
              key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
        - name: Install and Build
          uses: ./.github/actions/build
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v0
          with:
              project_id: ${{ env.PROJECT_CLUSTER_ID }}
              service_account_key: ${{ secrets.CM_GCP_KEY }}
              export_default_credentials: true
        - name: Env variable
          run: |
            echo "GCP_PROJECT=${{env.PROJECT_ID}}" >> ${{ env.ENV_FILE }}
            echo "SERVICE_NAME=${{env.SERVICE_NAME}}" >> ${{ env.ENV_FILE }}
            echo "HOST=${{env.HOST}}" >> ${{ env.ENV_FILE }}
            echo "DOMAIN=${{env.DOMAIN}}" >> ${{ env.ENV_FILE }}
        - name: Create ENV File
          run: cp ${{ env.ENV_FILE }} .env
        - name: Build and deploy image
          run: PROJECT_ID=$PROJECT_CLUSTER_ID COMMIT_SHA=${{ github.sha }} SERVICE_NAME=$SERVICE_NAME make deploy

    kubernetes:
      runs-on: ubuntu-latest
      name: Kubernetes
      needs: build_and_deploy
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v0
          with:
            project_id: ${{ env.PROJECT_CLUSTER_ID }}
            service_account_key: ${{ secrets.CM_GCP_KEY }}
            export_default_credentials: true
        - id: get-credentials
          name: Get Credentials
          uses: google-github-actions/get-gke-credentials@main
          with:
            cluster_name: ${{ env.CLUSTER_NAME }}
            location: ${{ env.CLUSTER_LOCATION }}
            credentials: ${{ secrets.CM_GCP_KEY }}
            project_id: ${{ env.PROJECT_CLUSTER_ID }}
            service_name: ${{ env.SERVICE_NAME}}
            domain: ${{ env.DOMAIN}}
        - name: Setup Kustomize
          uses: imranismail/setup-kustomize@v1
          with:
              kustomize-version: '3.9.2'
        - name: Update image
          run: kustomize edit set image PROJECT/IMAGE=gcr.io/$PROJECT_CLUSTER_ID/$SERVICE_NAME:$GITHUB_SHA
          working-directory: ./manifests/overlays/${{ env.ENV }}
        - name: Build and Deploy
          run: HOST=$HOST SERVICE_NAME=$SERVICE_NAME GCP_PROJECT=$PROJECT_ID DOMAIN=$DOMAIN kustomize build . | envsubst | kubectl apply -f -
          working-directory: ./manifests/overlays//${{ env.ENV }}
        - name: Delete pods
          run: kubectl --namespace=apis delete pod -l app=$SERVICE_NAME


    create_pull_request:
      runs-on: ubuntu-latest
      needs: kubernetes
      name: Master Pull Request
      steps:
        - uses: actions/checkout@v2

        - name: Make changes to pull request
          run: date +%s > report.txt

        - name: Create Pull Request
          id: cpr
          uses: peter-evans/create-pull-request@v3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            commit-message: merging testing into master
            author: ${{ github.actor }} <${{ github.actor }}>
            signoff: false
            branch: ${{ github.ref }}
            base: master
            title: 'Merge testing into master branch'
            body: |
              Update report
              desplegar a produccion. :heart:
            labels: |
              report
              automated pr
            team-reviewers: |
                    legalizacion-reviewers
                    checkpoint-review

    slackNotification:
      name: Slack Notification
      runs-on: ubuntu-latest
      needs: [build_and_deploy, kubernetes, create_pull_request]
      if: ${{ success() }}
      steps:
        - uses: actions/checkout@v2
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_CHANNEL: alerts
            SLACK_COLOR: ${{ job.status }}
            SLACK_ICON: https://github.com/coordinadora-mercantil.png?size=48
            SLACK_TITLE: ${{ github.repository }}
            SLACK_MESSAGE: |-
              ¡Grandioso! El pipeline del proyecto ${{ github.repository }} en testing fue exitoso
              Verificalo en el URL ${{ env.HOST }}/${{ env.DOMAIN }}/${{ env.SERVICE_NAME }}
              Para ver los logs del servicio:
              https://console.cloud.google.com/kubernetes/deployment/${{env.CLUSTER_LOCATION}}/${{env.CLUSTER_NAME}}/apis/${{env.SERVICE_NAME}}/logs?project=${{env.PROJECT_CLUSTER_ID}}
              Para ver la documentación:
              https://${{env.HOST}}/${{env.DOMAIN}}/${{env.SERVICE_NAME}}/docs
              ¡Sigue así! :rocket:
            SLACK_USERNAME: Kubo
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_FOOTER: 'Made with :heart: by Coordinadora'
    slackNotificationFailure:
      name: Slack Notification failure
      runs-on: ubuntu-latest
      needs: [build_and_deploy, kubernetes, create_pull_request]
      if: ${{ failure() }}
      steps:
        - uses: actions/checkout@v2
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_CHANNEL: alerts
            SLACK_COLOR: '#FF0000'
            SLACK_ICON: https://github.com/coordinadora-mercantil.png?size=48
            SLACK_TITLE: ${{ github.repository }}
            SLACK_MESSAGE: |-
              El pipeline del proyecto ${{ github.repository }} no fue exitoso
              ¡Lo siento mucho :cry:! A la próxima se corrige, no te preocupes por eso.
            SLACK_USERNAME: Kubo
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_FOOTER: 'Made with :heart: by Coordinadora'
